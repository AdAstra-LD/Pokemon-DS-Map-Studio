/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package editor.heightselector;

import editor.handler.MapEditorHandler;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;

/**
 *
 * @author Trifindo
 */
public class HeightSelector extends javax.swing.JPanel {

    private MapEditorHandler handler;

    private int tileSize = 16;
    
    

    /**
     * Creates new form HeightSelector
     */
    public HeightSelector() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        int y = evt.getY() / tileSize;
        int numHeights = handler.getNumHeights();
        if ((y >= 0) && (y < numHeights)) {
            handler.setHeightIndexSelected(numHeights - 1 - y);
            repaint();
        }
    }//GEN-LAST:event_formMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);

        if (handler != null) {
            int numHeights = handler.getNumHeights();
            for (int i = 0; i < numHeights; i++) {
                g.drawImage(handler.getHeightImage(i), 0, i * tileSize, null);
                /*
                //Draw height color
                g.setColor(handler.getHeightColorByIndex(i));
                g.fillRect(0, (numHeights - 1 - i) * tileSize, tileSize, tileSize);

                //Draw grid
                g.setColor(new Color(255, 255, 255, 255));
                g.drawRect(0, (numHeights - 1 - i) * tileSize, tileSize, tileSize);

                //Draw height value
                int xOffset = Math.abs(handler.getHeight(i)) > 9 ? 1 : 5;
                g.setColor(new Color(0, 0, 0, 255));
                g.drawString(String.valueOf(handler.getHeight(i)), xOffset, (numHeights - i) * tileSize - 2);
                */
            }

            //g.setColor(new Color(50, 50, 50));
            //g.drawRect(0, 0, getWidth() - 1, getHeight() - 1);
            
            g.setColor(Color.red);
            g.drawRect(
                    0, 
                    (numHeights - 1 - handler.getHeightIndexSelected()) * tileSize, 
                    tileSize - 1, 
                    tileSize - 1);
            
            g.setColor(new Color(255, 0, 0, 96));
            g.fillRect(
                    0, 
                    (numHeights - 1 - handler.getHeightIndexSelected()) * tileSize, 
                    tileSize - 1, 
                    tileSize - 1);
        }

    }

    public void init(MapEditorHandler handler) {
        this.handler = handler;

        setPreferredSize(new Dimension(tileSize, handler.getNumHeights() * tileSize));
        setSize(new Dimension(tileSize, handler.getNumHeights() * tileSize));
    }
}
